/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *             Copyright (C) 2000,2001 by the OpenSG Forum                   *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class GenvisCache
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGGENVISCACHEBASE_H_
#define _OSGGENVISCACHEBASE_H_
#ifdef __sgi
#pragma once
#endif


#include <OSGConfig.h>
#include <OSGGVBase.h>

#include <OSGBaseTypes.h>

#include <OSGAttachment.h> // Parent

#include <OSGMatrixFields.h> // AdapterMatrix type
#include <OSGGVBVolAdapterBasePFields.h> // BVolAdapter type
#include <OSGGVBVolAdapterBasePFields.h> // CollisionCache type

#include <OSGGenvisCacheFields.h>

OSG_BEGIN_NAMESPACE

class GenvisCache;
class BinaryDataHandler;

//! \brief GenvisCache Base Class.

class OSG_GENVISLIB_DLLMAPPING GenvisCacheBase : public Attachment
{
  private:

    typedef Attachment Inherited;

    /*==========================  PUBLIC  =================================*/
  public:

    enum
    {
        AdapterMatrixFieldId  = Inherited::NextFieldId,
        BVolAdapterFieldId    = AdapterMatrixFieldId  + 1,
        Adapter2FieldId       = BVolAdapterFieldId + 1,
        Adapter3FieldId       = Adapter2FieldId + 1,
        CollisionCacheFieldId = Adapter3FieldId + 1,
        NextFieldId           = CollisionCacheFieldId + 1
    };

    static const osg::BitVector AdapterMatrixFieldMask;
    static const osg::BitVector BVolAdapterFieldMask;
    static const osg::BitVector Adapter2FieldMask;
    static const osg::BitVector Adapter3FieldMask;
    static const osg::BitVector CollisionCacheFieldMask;


    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static        FieldContainerType &getClassType    (void); 
    static        UInt32              getClassTypeId  (void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType  (void); 
    virtual const FieldContainerType &getType  (void) const; 

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

           MFMatrix            *getMFAdapterMatrix  (void);
           MFBVolAdapterBaseP  *getMFBVolAdapter    (void);
           MFBVolAdapterBaseP  *getMFAdapter2       (void);
           MFBVolAdapterBaseP  *getMFAdapter3       (void);
           MFBVolAdapterBaseP  *getMFCollisionCache (void);

           Matrix              &getAdapterMatrix  (const UInt32 index);
           MFMatrix            &getAdapterMatrix  (void);
     const MFMatrix            &getAdapterMatrix  (void) const;
           BVolAdapterBaseP    &getBVolAdapter    (const UInt32 index);
           MFBVolAdapterBaseP  &getBVolAdapter    (void);
     const MFBVolAdapterBaseP  &getBVolAdapter    (void) const;
           BVolAdapterBaseP    &getAdapter2    (const UInt32 index);
           MFBVolAdapterBaseP  &getAdapter2    (void);
     const MFBVolAdapterBaseP  &getAdapter2    (void) const;
           BVolAdapterBaseP    &getAdapter3    (const UInt32 index);
           MFBVolAdapterBaseP  &getAdapter3    (void);
     const MFBVolAdapterBaseP  &getAdapter3    (void) const;
           BVolAdapterBaseP    &getCollisionCache (const UInt32 index);
           MFBVolAdapterBaseP  &getCollisionCache (void);
     const MFBVolAdapterBaseP  &getCollisionCache (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (const BitVector         &whichField);
    virtual void   copyToBin  (      BinaryDataHandler &pMem,
                               const BitVector         &whichField);
    virtual void   copyFromBin(      BinaryDataHandler &pMem,
                               const BitVector         &whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  GenvisCachePtr      create          (void); 
    static  GenvisCachePtr      createEmpty     (void); 

    /*! \}                                                                 */

    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerPtr     shallowCopy     (void) const; 

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/
  protected:

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    MFMatrix            _mfAdapterMatrix;
    MFBVolAdapterBaseP   _mfBVolAdapter;
    MFBVolAdapterBaseP   _mfAdapter2;
    MFBVolAdapterBaseP   _mfAdapter3;
    MFBVolAdapterBaseP   _mfCollisionCache;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    GenvisCacheBase(void);
    GenvisCacheBase(const GenvisCacheBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~GenvisCacheBase(void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    void executeSyncImpl(      GenvisCacheBase *pOther,
                         const BitVector         &whichField);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/
  private:

    friend class FieldContainer;

    static FieldDescription   *_desc[];
    static FieldContainerType  _type;


    // prohibit default functions (move to 'public' if you need one)
    void operator =(const GenvisCacheBase &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


typedef GenvisCacheBase *GenvisCacheBaseP;

OSG_END_NAMESPACE

#define OSGGENVISCACHEBASE_HEADER_CVSID "@(#)$Id: OSGGenvisCacheBase.h,v 1.1 2003/09/11 16:20:29 fuenfzig Exp $"

#endif /* _OSGGENVISCACHEBASE_H_ */
