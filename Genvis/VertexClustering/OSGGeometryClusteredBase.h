/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2002 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class GeometryClustered
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGGEOMETRYCLUSTEREDBASE_H_
#define _OSGGEOMETRYCLUSTEREDBASE_H_
#ifdef __sgi
#pragma once
#endif


#include <fstream>
#include <OSGConfig.h>
#include <OSGGVBase.h>

#include <OSGBaseTypes.h>

#include <OSGGeometry.h> // Parent

#include <OSGReal32Fields.h> // NumCells type
#include <OSGGeometryPositionCluster.h> // Grid type
#include <OSGStringFields.h> // ModelFilename type
#include <OSGReal32Fields.h> // NormalScale type
#include <OSGUInt32Fields.h> // NumTriangles type
#include <OSGInt32Fields.h> // OffsetFaces type

#include <OSGGeometryClusteredFields.h>

OSG_BEGIN_NAMESPACE

class GeometryClustered;
class BinaryDataHandler;

//! \brief GeometryClustered Base Class.

class OSG_GENVISLIB_DLLMAPPING GeometryClusteredBase : public Geometry
{
  private:

    typedef Geometry    Inherited;

    /*==========================  PUBLIC  =================================*/
  public:

    typedef GeometryClusteredPtr  Ptr;

    enum
    {
        NumCellsFieldId      = Inherited::NextFieldId,
        GridFieldId          = NumCellsFieldId      + 1,
        ModelFilenameFieldId = GridFieldId          + 1,
        NormalScaleFieldId   = ModelFilenameFieldId + 1,
        NumTrianglesFieldId  = NormalScaleFieldId   + 1,
        OffsetFacesFieldId   = NumTrianglesFieldId  + 1,
        NextFieldId          = OffsetFacesFieldId   + 1
    };

    static const OSG::BitVector NumCellsFieldMask;
    static const OSG::BitVector GridFieldMask;
    static const OSG::BitVector ModelFilenameFieldMask;
    static const OSG::BitVector NormalScaleFieldMask;
    static const OSG::BitVector NumTrianglesFieldMask;
    static const OSG::BitVector OffsetFacesFieldMask;


    static const OSG::BitVector MTInfluenceMask;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static        FieldContainerType &getClassType    (void); 
    static        UInt32              getClassTypeId  (void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType  (void); 
    virtual const FieldContainerType &getType  (void) const; 

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

           SFReal32            *getSFNumCells       (void);
           SFSetUnionGridP     *getSFGrid           (void);
           SFString            *getSFModelFilename  (void);
           SFReal32            *getSFNormalScale    (void);

           Real32              &getNumCells       (void);
     const Real32              &getNumCells       (void) const;
           SetUnionGridP       &getGrid           (void);
     const SetUnionGridP       &getGrid           (void) const;
           std::string         &getModelFilename  (void);
     const std::string         &getModelFilename  (void) const;
           Real32              &getNormalScale    (void);
     const Real32              &getNormalScale    (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

     void setNumCells       ( const Real32 &value );
     void setGrid           ( const SetUnionGridP &value );
     void setModelFilename  ( const std::string &value );
     void setNormalScale    ( const Real32 &value );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (const BitVector         &whichField);
    virtual void   copyToBin  (      BinaryDataHandler &pMem,
                               const BitVector         &whichField);
    virtual void   copyFromBin(      BinaryDataHandler &pMem,
                               const BitVector         &whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  GeometryClusteredPtr      create          (void); 
    static  GeometryClusteredPtr      createEmpty     (void); 

    /*! \}                                                                 */

    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerPtr     shallowCopy     (void) const; 

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/
  protected:

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFReal32            _sfNumCells;
    SFSetUnionGridP     _sfGrid;
    SFString            _sfModelFilename;
    SFReal32            _sfNormalScale;
    SFUInt32            _sfNumTriangles;
    SFInt32             _sfOffsetFaces;
    std::ifstream       _fileStream;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    GeometryClusteredBase(void);
    GeometryClusteredBase(const GeometryClusteredBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~GeometryClusteredBase(void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

           SFUInt32            *getSFNumTriangles   (void);
           SFInt32             *getSFOffsetFaces    (void);

           UInt32              &getNumTriangles   (void);
     const UInt32              &getNumTriangles   (void) const;
           Int32               &getOffsetFaces    (void);
     const Int32               &getOffsetFaces    (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

     void setNumTriangles   (const UInt32 &value);
     void setOffsetFaces    (const Int32 &value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    void executeSyncImpl(      GeometryClusteredBase *pOther,
                         const BitVector         &whichField);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/
  private:

    friend class FieldContainer;

    static FieldDescription   *_desc[];
    static FieldContainerType  _type;


    // prohibit default functions (move to 'public' if you need one)
    void operator =(const GeometryClusteredBase &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


typedef GeometryClusteredBase *GeometryClusteredBaseP;

OSG_END_NAMESPACE

#define OSGGEOMETRYCLUSTEREDBASE_HEADER_CVSID "@(#)$Id: OSGGeometryClusteredBase.h,v 1.5 2004/12/20 15:54:30 fuenfzig Exp $"

#endif /* _OSGGEOMETRYCLUSTEREDBASE_H_ */
