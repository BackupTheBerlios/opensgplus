/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2002 by the OpenSG Forum                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class LafortuneMaterial!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &LafortuneMaterialBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 LafortuneMaterialBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
LafortuneMaterialPtr LafortuneMaterialBase::create(void) 
{
    LafortuneMaterialPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = LafortuneMaterialPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
LafortuneMaterialPtr LafortuneMaterialBase::createEmpty(void) 
{ 
    LafortuneMaterialPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the LafortuneMaterial::_sfAmbient field.
inline
SFColor3f *LafortuneMaterialBase::getSFAmbient(void)
{
    return &_sfAmbient;
}

//! Get the LafortuneMaterial::_sfDiffuse field.
inline
SFColor3f *LafortuneMaterialBase::getSFDiffuse(void)
{
    return &_sfDiffuse;
}

//! Get the LafortuneMaterial::_sfKa field.
inline
SFReal32 *LafortuneMaterialBase::getSFKa(void)
{
    return &_sfKa;
}

//! Get the LafortuneMaterial::_sfRho_d field.
inline
SFReal32 *LafortuneMaterialBase::getSFRho_d(void)
{
    return &_sfRho_d;
}

//! Get the LafortuneMaterial::_sfKs field.
inline
SFReal32 *LafortuneMaterialBase::getSFKs(void)
{
    return &_sfKs;
}

//! Get the LafortuneMaterial::_sfEmission field.
inline
SFColor3f *LafortuneMaterialBase::getSFEmission(void)
{
    return &_sfEmission;
}

//! Get the LafortuneMaterial::_sfTransparency field.
inline
SFReal32 *LafortuneMaterialBase::getSFTransparency(void)
{
    return &_sfTransparency;
}

//! Get the LafortuneMaterial::_sfCx field.
inline
SFColor3f *LafortuneMaterialBase::getSFCx(void)
{
    return &_sfCx;
}

//! Get the LafortuneMaterial::_sfCz field.
inline
SFColor3f *LafortuneMaterialBase::getSFCz(void)
{
    return &_sfCz;
}

//! Get the LafortuneMaterial::_sfN field.
inline
SFColor3f *LafortuneMaterialBase::getSFN(void)
{
    return &_sfN;
}

//! Get the LafortuneMaterial::_sfSelector field.
inline
SFInt8 *LafortuneMaterialBase::getSFSelector(void)
{
    return &_sfSelector;
}

//! Get the LafortuneMaterial::_sfLightPos field.
inline
SFPnt3f *LafortuneMaterialBase::getSFLightPos(void)
{
    return &_sfLightPos;
}

//! Get the LafortuneMaterial::_sfUseweight field.
inline
SFBool *LafortuneMaterialBase::getSFUseweight(void)
{
    return &_sfUseweight;
}

//! Get the LafortuneMaterial::_sfTextureImage field.
inline
SFImagePtr *LafortuneMaterialBase::getSFTextureImage(void)
{
    return &_sfTextureImage;
}

//! Get the LafortuneMaterial::_sfUseFPorRC field.
inline
SFInt8 *LafortuneMaterialBase::getSFUseFPorRC(void)
{
    return &_sfUseFPorRC;
}

//! Get the LafortuneMaterial::_sfCompTexCoord field.
inline
SFBool *LafortuneMaterialBase::getSFCompTexCoord(void)
{
    return &_sfCompTexCoord;
}

//! Get the LafortuneMaterial::_sfHalfBBoxObj field.
inline
SFReal32 *LafortuneMaterialBase::getSFHalfBBoxObj(void)
{
    return &_sfHalfBBoxObj;
}


//! Get the value of the LafortuneMaterial::_sfAmbient field.
inline
Color3f &LafortuneMaterialBase::getAmbient(void)
{
    return _sfAmbient.getValue();
}

//! Get the value of the LafortuneMaterial::_sfAmbient field.
inline
const Color3f &LafortuneMaterialBase::getAmbient(void) const
{
    return _sfAmbient.getValue();
}

//! Set the value of the LafortuneMaterial::_sfAmbient field.
inline
void LafortuneMaterialBase::setAmbient(const Color3f &value)
{
    _sfAmbient.setValue(value);
}

//! Get the value of the LafortuneMaterial::_sfDiffuse field.
inline
Color3f &LafortuneMaterialBase::getDiffuse(void)
{
    return _sfDiffuse.getValue();
}

//! Get the value of the LafortuneMaterial::_sfDiffuse field.
inline
const Color3f &LafortuneMaterialBase::getDiffuse(void) const
{
    return _sfDiffuse.getValue();
}

//! Set the value of the LafortuneMaterial::_sfDiffuse field.
inline
void LafortuneMaterialBase::setDiffuse(const Color3f &value)
{
    _sfDiffuse.setValue(value);
}

//! Get the value of the LafortuneMaterial::_sfKa field.
inline
Real32 &LafortuneMaterialBase::getKa(void)
{
    return _sfKa.getValue();
}

//! Get the value of the LafortuneMaterial::_sfKa field.
inline
const Real32 &LafortuneMaterialBase::getKa(void) const
{
    return _sfKa.getValue();
}

//! Set the value of the LafortuneMaterial::_sfKa field.
inline
void LafortuneMaterialBase::setKa(const Real32 &value)
{
    _sfKa.setValue(value);
}

//! Get the value of the LafortuneMaterial::_sfRho_d field.
inline
Real32 &LafortuneMaterialBase::getRho_d(void)
{
    return _sfRho_d.getValue();
}

//! Get the value of the LafortuneMaterial::_sfRho_d field.
inline
const Real32 &LafortuneMaterialBase::getRho_d(void) const
{
    return _sfRho_d.getValue();
}

//! Set the value of the LafortuneMaterial::_sfRho_d field.
inline
void LafortuneMaterialBase::setRho_d(const Real32 &value)
{
    _sfRho_d.setValue(value);
}

//! Get the value of the LafortuneMaterial::_sfKs field.
inline
Real32 &LafortuneMaterialBase::getKs(void)
{
    return _sfKs.getValue();
}

//! Get the value of the LafortuneMaterial::_sfKs field.
inline
const Real32 &LafortuneMaterialBase::getKs(void) const
{
    return _sfKs.getValue();
}

//! Set the value of the LafortuneMaterial::_sfKs field.
inline
void LafortuneMaterialBase::setKs(const Real32 &value)
{
    _sfKs.setValue(value);
}

//! Get the value of the LafortuneMaterial::_sfEmission field.
inline
Color3f &LafortuneMaterialBase::getEmission(void)
{
    return _sfEmission.getValue();
}

//! Get the value of the LafortuneMaterial::_sfEmission field.
inline
const Color3f &LafortuneMaterialBase::getEmission(void) const
{
    return _sfEmission.getValue();
}

//! Set the value of the LafortuneMaterial::_sfEmission field.
inline
void LafortuneMaterialBase::setEmission(const Color3f &value)
{
    _sfEmission.setValue(value);
}

//! Get the value of the LafortuneMaterial::_sfTransparency field.
inline
Real32 &LafortuneMaterialBase::getTransparency(void)
{
    return _sfTransparency.getValue();
}

//! Get the value of the LafortuneMaterial::_sfTransparency field.
inline
const Real32 &LafortuneMaterialBase::getTransparency(void) const
{
    return _sfTransparency.getValue();
}

//! Set the value of the LafortuneMaterial::_sfTransparency field.
inline
void LafortuneMaterialBase::setTransparency(const Real32 &value)
{
    _sfTransparency.setValue(value);
}

//! Get the value of the LafortuneMaterial::_sfCx field.
inline
Color3f &LafortuneMaterialBase::getCx(void)
{
    return _sfCx.getValue();
}

//! Get the value of the LafortuneMaterial::_sfCx field.
inline
const Color3f &LafortuneMaterialBase::getCx(void) const
{
    return _sfCx.getValue();
}

//! Set the value of the LafortuneMaterial::_sfCx field.
inline
void LafortuneMaterialBase::setCx(const Color3f &value)
{
    _sfCx.setValue(value);
}

//! Get the value of the LafortuneMaterial::_sfCz field.
inline
Color3f &LafortuneMaterialBase::getCz(void)
{
    return _sfCz.getValue();
}

//! Get the value of the LafortuneMaterial::_sfCz field.
inline
const Color3f &LafortuneMaterialBase::getCz(void) const
{
    return _sfCz.getValue();
}

//! Set the value of the LafortuneMaterial::_sfCz field.
inline
void LafortuneMaterialBase::setCz(const Color3f &value)
{
    _sfCz.setValue(value);
}

//! Get the value of the LafortuneMaterial::_sfN field.
inline
Color3f &LafortuneMaterialBase::getN(void)
{
    return _sfN.getValue();
}

//! Get the value of the LafortuneMaterial::_sfN field.
inline
const Color3f &LafortuneMaterialBase::getN(void) const
{
    return _sfN.getValue();
}

//! Set the value of the LafortuneMaterial::_sfN field.
inline
void LafortuneMaterialBase::setN(const Color3f &value)
{
    _sfN.setValue(value);
}

//! Get the value of the LafortuneMaterial::_sfSelector field.
inline
Int8 &LafortuneMaterialBase::getSelector(void)
{
    return _sfSelector.getValue();
}

//! Get the value of the LafortuneMaterial::_sfSelector field.
inline
const Int8 &LafortuneMaterialBase::getSelector(void) const
{
    return _sfSelector.getValue();
}

//! Set the value of the LafortuneMaterial::_sfSelector field.
inline
void LafortuneMaterialBase::setSelector(const Int8 &value)
{
    _sfSelector.setValue(value);
}

//! Get the value of the LafortuneMaterial::_sfLightPos field.
inline
Pnt3f &LafortuneMaterialBase::getLightPos(void)
{
    return _sfLightPos.getValue();
}

//! Get the value of the LafortuneMaterial::_sfLightPos field.
inline
const Pnt3f &LafortuneMaterialBase::getLightPos(void) const
{
    return _sfLightPos.getValue();
}

//! Set the value of the LafortuneMaterial::_sfLightPos field.
inline
void LafortuneMaterialBase::setLightPos(const Pnt3f &value)
{
    _sfLightPos.setValue(value);
}

//! Get the value of the LafortuneMaterial::_sfUseweight field.
inline
bool &LafortuneMaterialBase::getUseweight(void)
{
    return _sfUseweight.getValue();
}

//! Get the value of the LafortuneMaterial::_sfUseweight field.
inline
const bool &LafortuneMaterialBase::getUseweight(void) const
{
    return _sfUseweight.getValue();
}

//! Set the value of the LafortuneMaterial::_sfUseweight field.
inline
void LafortuneMaterialBase::setUseweight(const bool &value)
{
    _sfUseweight.setValue(value);
}

//! Get the value of the LafortuneMaterial::_sfTextureImage field.
inline
ImagePtr &LafortuneMaterialBase::getTextureImage(void)
{
    return _sfTextureImage.getValue();
}

//! Get the value of the LafortuneMaterial::_sfTextureImage field.
inline
const ImagePtr &LafortuneMaterialBase::getTextureImage(void) const
{
    return _sfTextureImage.getValue();
}

//! Set the value of the LafortuneMaterial::_sfTextureImage field.
inline
void LafortuneMaterialBase::setTextureImage(const ImagePtr &value)
{
    _sfTextureImage.setValue(value);
}

//! Get the value of the LafortuneMaterial::_sfUseFPorRC field.
inline
Int8 &LafortuneMaterialBase::getUseFPorRC(void)
{
    return _sfUseFPorRC.getValue();
}

//! Get the value of the LafortuneMaterial::_sfUseFPorRC field.
inline
const Int8 &LafortuneMaterialBase::getUseFPorRC(void) const
{
    return _sfUseFPorRC.getValue();
}

//! Set the value of the LafortuneMaterial::_sfUseFPorRC field.
inline
void LafortuneMaterialBase::setUseFPorRC(const Int8 &value)
{
    _sfUseFPorRC.setValue(value);
}

//! Get the value of the LafortuneMaterial::_sfCompTexCoord field.
inline
bool &LafortuneMaterialBase::getCompTexCoord(void)
{
    return _sfCompTexCoord.getValue();
}

//! Get the value of the LafortuneMaterial::_sfUseweight field.
inline
const bool &LafortuneMaterialBase::getCompTexCoord(void) const
{
    return _sfCompTexCoord.getValue();
}

//! Set the value of the LafortuneMaterial::_sfUseweight field.
inline
void LafortuneMaterialBase::setCompTexCoord(const bool &value)
{
    _sfCompTexCoord.setValue(value);
}


//! Get the value of the LafortuneMaterial::_sfHalfBBoxObj field.
inline
Real32 &LafortuneMaterialBase::getHalfBBoxObj(void)
{
    return _sfHalfBBoxObj.getValue();
}

//! Get the value of the LafortuneMaterial::_sfTransparency field.
inline
const Real32 &LafortuneMaterialBase::getHalfBBoxObj(void) const
{
    return _sfHalfBBoxObj.getValue();
}

//! Set the value of the LafortuneMaterial::_sfTransparency field.
inline
void LafortuneMaterialBase::setHalfBBoxObj(const Real32 &value)
{
    _sfHalfBBoxObj.setValue(value);
}

OSG_END_NAMESPACE

#define OSGLAFORTUNEMATERIALBASE_INLINE_CVSID "@(#)$Id: OSGLafortuneMaterialBase.inl,v 1.1 2003/12/03 21:49:52 jnkautz Exp $"

