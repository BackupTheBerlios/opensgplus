/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2002 by the OpenSG Forum                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class NDFMaterial!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &NDFMaterialBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 NDFMaterialBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
NDFMaterialPtr NDFMaterialBase::create(void) 
{
    NDFMaterialPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = NDFMaterialPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
NDFMaterialPtr NDFMaterialBase::createEmpty(void) 
{ 
    NDFMaterialPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the NDFMaterial::_sfAmbient field.
inline
SFColor3f *NDFMaterialBase::getSFAmbient(void)
{
    return &_sfAmbient;
}

//! Get the NDFMaterial::_sfDiffuse field.
inline
SFColor3f *NDFMaterialBase::getSFDiffuse(void)
{
    return &_sfDiffuse;
}

//! Get the NDFMaterial::_sfSpecular field.
inline
SFColor3f *NDFMaterialBase::getSFSpecular(void)
{
    return &_sfSpecular;
}

//! Get the NDFMaterial::_sfKa field.
inline
SFReal32 *NDFMaterialBase::getSFKa(void)
{
    return &_sfKa;
}

//! Get the NDFMaterial::_sfKd field.
inline
SFReal32 *NDFMaterialBase::getSFKd(void)
{
    return &_sfKd;
}

//! Get the NDFMaterial::_sfKs field.
inline
SFReal32 *NDFMaterialBase::getSFKs(void)
{
    return &_sfKs;
}

//! Get the NDFMaterial::_sfEmission field.
inline
SFColor3f *NDFMaterialBase::getSFEmission(void)
{
    return &_sfEmission;
}

//! Get the NDFMaterial::_sfFresnel field.
inline
SFColor3f *NDFMaterialBase::getSFFresnel(void)
{
    return &_sfFresnel;
}

//! Get the NDFMaterial::_sfTransparency field.
inline
SFReal32 *NDFMaterialBase::getSFTransparency(void)
{
    return &_sfTransparency;
}

//! Get the NDFMaterial::_sfFresnelTerm field.
inline
SFBool *NDFMaterialBase::getSFFresnelTerm(void)
{
    return &_sfFresnelTerm;
}

//! Get the NDFMaterial::_sfSelfShadowingTerm field.
inline
SFBool *NDFMaterialBase::getSFSelfShadowingTerm(void)
{
    return &_sfSelfShadowingTerm;
}

//! Get the NDFMaterial::_sfCorrectCosine field.
inline
SFBool *NDFMaterialBase::getSFCorrectCosine(void)
{
    return &_sfCorrectCosine;
}

//! Get the NDFMaterial::_sfDiffuseImage field.
inline
SFImagePtr *NDFMaterialBase::getSFDiffuseImage(void)
{
    return &_sfDiffuseImage;
}

//! Get the NDFMaterial::_sfNDFImage field.
inline
SFImagePtr *NDFMaterialBase::getSFNDFImage(void)
{
    return &_sfNDFImage;
}

//! Get the NDFMaterial::_sfLightPos field.
inline
SFPnt3f *NDFMaterialBase::getSFLightPos(void)
{
    return &_sfLightPos;
}

//! Get the NDFMaterial::_sfLightSpecular field.
inline
SFColor3f *NDFMaterialBase::getSFLightSpecular(void)
{
    return &_sfLightSpecular;
}

//! Get the NDFMaterial::_sfOnlyDiffuse field.
inline
SFBool *NDFMaterialBase::getSFOnlyDiffuse(void)
{
    return &_sfOnlyDiffuse;
}

//! Get the NDFMaterial::_sfUseFPorRC field.
inline
SFUInt8 *NDFMaterialBase::getSFUseFPorRC(void)
{
    return &_sfUseFPorRC;
}

//! Get the value of the NDFMaterial::_sfAmbient field.
inline
Color3f &NDFMaterialBase::getAmbient(void)
{
    return _sfAmbient.getValue();
}

//! Get the value of the NDFMaterial::_sfAmbient field.
inline
const Color3f &NDFMaterialBase::getAmbient(void) const
{
    return _sfAmbient.getValue();
}

//! Set the value of the NDFMaterial::_sfAmbient field.
inline
void NDFMaterialBase::setAmbient(const Color3f &value)
{
    _sfAmbient.setValue(value);
}

//! Get the value of the NDFMaterial::_sfDiffuse field.
inline
Color3f &NDFMaterialBase::getDiffuse(void)
{
    return _sfDiffuse.getValue();
}

//! Get the value of the NDFMaterial::_sfDiffuse field.
inline
const Color3f &NDFMaterialBase::getDiffuse(void) const
{
    return _sfDiffuse.getValue();
}

//! Set the value of the NDFMaterial::_sfDiffuse field.
inline
void NDFMaterialBase::setDiffuse(const Color3f &value)
{
    _sfDiffuse.setValue(value);
}

//! Get the value of the NDFMaterial::_sfSpecular field.
inline
Color3f &NDFMaterialBase::getSpecular(void)
{
    return _sfSpecular.getValue();
}

//! Get the value of the NDFMaterial::_sfSpecular field.
inline
const Color3f &NDFMaterialBase::getSpecular(void) const
{
    return _sfSpecular.getValue();
}

//! Set the value of the NDFMaterial::_sfSpecular field.
inline
void NDFMaterialBase::setSpecular(const Color3f &value)
{
    _sfSpecular.setValue(value);
}

//! Get the value of the NDFMaterial::_sfKa field.
inline
Real32 &NDFMaterialBase::getKa(void)
{
    return _sfKa.getValue();
}

//! Get the value of the NDFMaterial::_sfKa field.
inline
const Real32 &NDFMaterialBase::getKa(void) const
{
    return _sfKa.getValue();
}

//! Set the value of the NDFMaterial::_sfKa field.
inline
void NDFMaterialBase::setKa(const Real32 &value)
{
    _sfKa.setValue(value);
}

//! Get the value of the NDFMaterial::_sfKd field.
inline
Real32 &NDFMaterialBase::getKd(void)
{
    return _sfKd.getValue();
}

//! Get the value of the NDFMaterial::_sfKd field.
inline
const Real32 &NDFMaterialBase::getKd(void) const
{
    return _sfKd.getValue();
}

//! Set the value of the NDFMaterial::_sfKd field.
inline
void NDFMaterialBase::setKd(const Real32 &value)
{
    _sfKd.setValue(value);
}

//! Get the value of the NDFMaterial::_sfKs field.
inline
Real32 &NDFMaterialBase::getKs(void)
{
    return _sfKs.getValue();
}

//! Get the value of the NDFMaterial::_sfKs field.
inline
const Real32 &NDFMaterialBase::getKs(void) const
{
    return _sfKs.getValue();
}

//! Set the value of the NDFMaterial::_sfKs field.
inline
void NDFMaterialBase::setKs(const Real32 &value)
{
    _sfKs.setValue(value);
}

//! Get the value of the NDFMaterial::_sfEmission field.
inline
Color3f &NDFMaterialBase::getEmission(void)
{
    return _sfEmission.getValue();
}

//! Get the value of the NDFMaterial::_sfEmission field.
inline
const Color3f &NDFMaterialBase::getEmission(void) const
{
    return _sfEmission.getValue();
}

//! Set the value of the NDFMaterial::_sfEmission field.
inline
void NDFMaterialBase::setEmission(const Color3f &value)
{
    _sfEmission.setValue(value);
}

//! Get the value of the NDFMaterial::_sfFresnel field.
inline
Color3f &NDFMaterialBase::getFresnel(void)
{
    return _sfFresnel.getValue();
}

//! Get the value of the NDFMaterial::_sfFresnel field.
inline
const Color3f &NDFMaterialBase::getFresnel(void) const
{
    return _sfFresnel.getValue();
}

//! Set the value of the NDFMaterial::_sfFresnel field.
inline
void NDFMaterialBase::setFresnel(const Color3f &value)
{
    _sfFresnel.setValue(value);
}

//! Get the value of the NDFMaterial::_sfTransparency field.
inline
Real32 &NDFMaterialBase::getTransparency(void)
{
    return _sfTransparency.getValue();
}

//! Get the value of the NDFMaterial::_sfTransparency field.
inline
const Real32 &NDFMaterialBase::getTransparency(void) const
{
    return _sfTransparency.getValue();
}

//! Set the value of the NDFMaterial::_sfTransparency field.
inline
void NDFMaterialBase::setTransparency(const Real32 &value)
{
    _sfTransparency.setValue(value);
}

//! Get the value of the NDFMaterial::_sfFresnelTerm field.
inline
bool &NDFMaterialBase::getFresnelTerm(void)
{
    return _sfFresnelTerm.getValue();
}

//! Get the value of the NDFMaterial::_sfFresnelTerm field.
inline
const bool &NDFMaterialBase::getFresnelTerm(void) const
{
    return _sfFresnelTerm.getValue();
}

//! Set the value of the NDFMaterial::_sfFresnelTerm field.
inline
void NDFMaterialBase::setFresnelTerm(const bool &value)
{
    _sfFresnelTerm.setValue(value);
}

//! Get the value of the NDFMaterial::_sfSelfShadowingTerm field.
inline
bool &NDFMaterialBase::getSelfShadowingTerm(void)
{
    return _sfSelfShadowingTerm.getValue();
}

//! Get the value of the NDFMaterial::_sfSelfShadowingTerm field.
inline
const bool &NDFMaterialBase::getSelfShadowingTerm(void) const
{
    return _sfSelfShadowingTerm.getValue();
}

//! Set the value of the NDFMaterial::_sfSelfShadowingTerm field.
inline
void NDFMaterialBase::setSelfShadowingTerm(const bool &value)
{
    _sfSelfShadowingTerm.setValue(value);
}

//! Get the value of the NDFMaterial::_sfCorrectCosine field.
inline
bool &NDFMaterialBase::getCorrectCosine(void)
{
    return _sfCorrectCosine.getValue();
}

//! Get the value of the NDFMaterial::_sfCorrectCosine field.
inline
const bool &NDFMaterialBase::getCorrectCosine(void) const
{
    return _sfCorrectCosine.getValue();
}

//! Set the value of the NDFMaterial::_sfCorrectCosine field.
inline
void NDFMaterialBase::setCorrectCosine(const bool &value)
{
    _sfCorrectCosine.setValue(value);
}

//! Get the value of the NDFMaterial::_sfDiffuseImage field.
inline
ImagePtr &NDFMaterialBase::getDiffuseImage(void)
{
    return _sfDiffuseImage.getValue();
}

//! Get the value of the NDFMaterial::_sfDiffuseImage field.
inline
const ImagePtr &NDFMaterialBase::getDiffuseImage(void) const
{
    return _sfDiffuseImage.getValue();
}

//! Set the value of the NDFMaterial::_sfDiffuseImage field.
inline
void NDFMaterialBase::setDiffuseImage(const ImagePtr &value)
{
    _sfDiffuseImage.setValue(value);
}

//! Get the value of the NDFMaterial::_sfNDFImage field.
inline
ImagePtr &NDFMaterialBase::getNDFImage(void)
{
    return _sfNDFImage.getValue();
}

//! Get the value of the NDFMaterial::_sfNDFImage field.
inline
const ImagePtr &NDFMaterialBase::getNDFImage(void) const
{
    return _sfNDFImage.getValue();
}

//! Set the value of the NDFMaterial::_sfNDFImage field.
inline
void NDFMaterialBase::setNDFImage(const ImagePtr &value)
{
    _sfNDFImage.setValue(value);
}

//! Get the value of the NDFMaterial::_sfLightPos field.
inline
Pnt3f &NDFMaterialBase::getLightPos(void)
{
    return _sfLightPos.getValue();
}

//! Get the value of the NDFMaterial::_sfLightPos field.
inline
const Pnt3f &NDFMaterialBase::getLightPos(void) const
{
    return _sfLightPos.getValue();
}

//! Set the value of the NDFMaterial::_sfLightPos field.
inline
void NDFMaterialBase::setLightPos(const Pnt3f &value)
{
    _sfLightPos.setValue(value);
}

//! Get the value of the NDFMaterial::_sfLightSpecular field.
inline
Color3f &NDFMaterialBase::getLightSpecular(void)
{
    return _sfLightSpecular.getValue();
}

//! Get the value of the NDFMaterial::_sfLightSpecular field.
inline
const Color3f &NDFMaterialBase::getLightSpecular(void) const
{
    return _sfLightSpecular.getValue();
}

//! Set the value of the NDFMaterial::_sfLightSpecular field.
inline
void NDFMaterialBase::setLightSpecular(const Color3f &value)
{
    _sfLightSpecular.setValue(value);
}

//! Get the value of the NDFMaterial::_sfOnlyDiffuse field.
inline
bool &NDFMaterialBase::getOnlyDiffuse(void)
{
    return _sfOnlyDiffuse.getValue();
}

//! Get the value of the NDFMaterial::_sfOnlyDiffuse field.
inline
const bool &NDFMaterialBase::getOnlyDiffuse(void) const
{
    return _sfOnlyDiffuse.getValue();
}

//! Set the value of the NDFMaterial::_sfOnlyDiffuse field.
inline
void NDFMaterialBase::setOnlyDiffuse(const bool &value)
{
    _sfOnlyDiffuse.setValue(value);
}

//! Get the value of the NDFMaterial::_sfUseFPorRC field.
inline
UInt8 &NDFMaterialBase::getUseFPorRC(void)
{
    return _sfUseFPorRC.getValue();
}

//! Get the value of the NDFMaterial::_sfUseFPorRC field.
inline
const UInt8 &NDFMaterialBase::getUseFPorRC(void) const
{
    return _sfUseFPorRC.getValue();
}

//! Set the value of the NDFMaterial::_sfUseFPorRC field.
inline
void NDFMaterialBase::setUseFPorRC(const UInt8 &value)
{
    _sfUseFPorRC.setValue(value);
}

OSG_END_NAMESPACE

#define OSGNDFMATERIALBASE_INLINE_CVSID "@(#)$Id: OSGNDFMaterialBase.inl,v 1.1 2003/05/19 12:04:39 jnkautz Exp $"

