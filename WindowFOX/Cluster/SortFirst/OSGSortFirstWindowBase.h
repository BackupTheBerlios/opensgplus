/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *             Copyright (C) 2000,2001 by the OpenSG Forum                   *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class SortFirstWindow
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGSORTFIRSTWINDOWBASE_H_
#define _OSGSORTFIRSTWINDOWBASE_H_
#ifdef __sgi
#pragma once
#endif


#include <OSGConfig.h>
#include <OSGClusterDef.h>

#include <OSGBaseTypes.h>
#include <OSGFieldDescription.h>
#include <OSGFieldContainer.h>

#include <OSGClusterWindow.h> // Parent

#include <OSGStringFields.h> // Compression type
#include <OSGUInt32Fields.h> // SubtileSize type
#include <OSGBoolFields.h> // Compose type
#include <OSGUInt32Fields.h> // Region type
#include <OSGBoolFields.h> // UseFaceDistribution type

#include <OSGSortFirstWindowFields.h>

OSG_BEGIN_NAMESPACE

class SortFirstWindow;
class BinaryDataHandler;

//! \brief SortFirstWindow Base Class.

class OSG_CLUSTERLIB_DLLMAPPING SortFirstWindowBase : public ClusterWindow
{
  private:

    typedef ClusterWindow Inherited;

    /*==========================  PUBLIC  =================================*/
  public:

    enum
    {
        CompressionFieldId         = Inherited::NextFieldId,
        SubtileSizeFieldId         = CompressionFieldId         + 1,
        ComposeFieldId             = SubtileSizeFieldId         + 1,
        RegionFieldId              = ComposeFieldId             + 1,
        UseFaceDistributionFieldId = RegionFieldId              + 1,
        NextFieldId                = UseFaceDistributionFieldId + 1
    };

    static const osg::BitVector CompressionFieldMask;
    static const osg::BitVector SubtileSizeFieldMask;
    static const osg::BitVector ComposeFieldMask;
    static const osg::BitVector RegionFieldMask;
    static const osg::BitVector UseFaceDistributionFieldMask;


    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static        FieldContainerType &getClassType    (void); 
    static        UInt32              getClassTypeId  (void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Get                                    */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType  (void); 
    virtual const FieldContainerType &getType  (void) const; 

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

    inline       SFString            *getSFCompression    (void);
    inline       SFUInt32            *getSFSubtileSize    (void);
    inline       SFBool              *getSFCompose        (void);
    inline       MFUInt32            *getMFRegion         (void);
    inline       SFBool              *getSFUseFaceDistribution(void);

    inline       string              &getCompression    (void);
    inline const string              &getCompression    (void) const;
    inline       UInt32              &getSubtileSize    (void);
    inline const UInt32              &getSubtileSize    (void) const;
    inline       bool                &getCompose        (void);
    inline const bool                &getCompose        (void) const;
    inline       bool                &getUseFaceDistribution(void);
    inline const bool                &getUseFaceDistribution(void) const;
    inline       UInt32              &getRegion         (UInt32 index);
    inline       MFUInt32            &getRegion         (void);
    inline const MFUInt32            &getRegion         (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

    inline void setCompression    ( const string &value );
    inline void setSubtileSize    ( const UInt32 &value );
    inline void setCompose        ( const bool &value );
    inline void setUseFaceDistribution( const bool &value );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (const BitVector         &whichField);
    virtual void   copyToBin  (      BinaryDataHandler &pMem,
                               const BitVector         &whichField);
    virtual void   copyFromBin(      BinaryDataHandler &pMem,
                               const BitVector         &whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  SortFirstWindowPtr      create          (void); 
    static  SortFirstWindowPtr      createEmpty     (void); 

    /*! \}                                                                 */

    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerPtr     shallowCopy     (void) const; 

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/
  protected:

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFString            _sfCompression;
    SFUInt32            _sfSubtileSize;
    SFBool              _sfCompose;
    MFUInt32            _mfRegion;
    SFBool              _sfUseFaceDistribution;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    SortFirstWindowBase(void);
    SortFirstWindowBase(const SortFirstWindowBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~SortFirstWindowBase(void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    void executeSyncImpl(      SortFirstWindowBase *pOther,
                         const BitVector         &whichField);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/
  private:

    friend class FieldContainer;

    static FieldDescription   *_desc[];
    static FieldContainerType  _type;


    // prohibit default functions (move to 'public' if you need one)
    void operator =(const SortFirstWindowBase &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


typedef SortFirstWindowBase *SortFirstWindowBaseP;

OSG_END_NAMESPACE

#define OSGSORTFIRSTWINDOWBASE_HEADER_CVSID "@(#)$Id: OSGSortFirstWindowBase.h,v 1.1 2002/05/24 15:50:49 fuenfzig Exp $"

#endif /* _OSGSORTFIRSTWINDOWBASE_H_ */
